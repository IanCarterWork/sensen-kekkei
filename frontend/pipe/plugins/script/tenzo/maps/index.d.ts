import { SensenEmitter } from "sensen-jutsu/emitter";
export declare type SensenPluginMapsProps = {
    id?: string;
    title?: string;
    about?: string;
    content?: string;
    host?: string | HTMLElement;
    type?: '@bing' | '@yandex';
};
export declare type SensenPluginMapsHostOverflow = {
    x: string;
    y: string;
};
export default class SensenPluginMaps extends HTMLElement {
    static $name: string;
    $underlay: HTMLElement;
    $overlay: HTMLElement;
    $title?: HTMLElement;
    $about?: HTMLElement;
    $header?: HTMLElement;
    $headerContent?: HTMLElement;
    $headerControls?: HTMLElement;
    $submitter?: HTMLElement;
    $content?: HTMLElement;
    $props?: SensenPluginMapsProps;
    $hostOverflow: SensenPluginMapsHostOverflow;
    $hostComputed: CSSStyleDeclaration;
    $emitter: SensenEmitter;
    $observer: MutationObserver;
    constructor(props?: SensenPluginMapsProps);
    connectedCallback(): void;
    adoptedCallback(): void;
    disconnectedCallback(): void;
    $render(): this;
    $captureHostState(): this;
    $disableHostScrolling(): this;
    $enableHostScrolling(): this;
    $initProps(): this;
    $initEmitters(): this;
    SetContent(iD?: string): this;
    $loadFailed(): this;
    $loading(): this;
    $unloading(): this;
    $open(position?: GeolocationPosition): Promise<this>;
    $overlayContent(): this;
    $close(): this;
    $showMap(): this;
    $hideMap(): this;
    static Get(ev: Event): void;
    static Open(iD: GeolocationPosition, props?: SensenPluginMapsProps): Promise<SensenPluginMaps>;
    static Close(name: string, host?: HTMLElement): typeof SensenPluginMaps;
    static $use(): typeof SensenPluginMaps;
}
